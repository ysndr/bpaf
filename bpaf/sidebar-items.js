window.SIDEBAR_ITEMS = {"derive":[["Bpaf","Derive macro for bpaf command line parser"]],"enum":[["CompleteDecor","Various complete options decorations"],["ParseFailure","Unsuccessful command line parsing outcome, use it for unit tests"]],"fn":[["any","Take next unconsumed item on the command line as raw [`String`] or [`OsString`]"],["command","Subcommand parser"],["env","Environment variable fallback"],["fail","Fail with a fixed error message"],["long","A flag/switch/argument that has a long name"],["positional","Positional argument in utf8 (`String`) encoding"],["pure","Wrap a value into a `Parser`"],["pure_with","Wrap a calculated value into a `Parser`"],["short","A flag/switch/argument that has a short name"]],"macro":[["construct","Compose several parsers to produce a single result"]],"mod":[["_applicative","Applicative functors? What is it about?"],["_combinatoric_tutorial","Using the library in combinatoric style"],["_derive_tutorial","Using the library in derive style"],["_unusual","Some of the more unusual examples"],["batteries","Batteries included - helpful parsers that use only public API"],["params","Tools to define primitive parsers"],["parsers","This module exposes parsers that accept further configuration with builder pattern"]],"struct":[["Args","All currently present command line parameters, use it for unit tests and manual parsing"],["OptionParser","Ready to run [`Parser`] with additional information attached"]],"trait":[["Parser","Simple or composed argument parser"]]};